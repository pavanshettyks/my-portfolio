{"version":3,"sources":["image/profile.jpg","components/LandingPage.js","components/ContactMe.js","components/AboutMe.js","components/Projects.js","components/Skills.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LandingPage","ContactMe","AboutMe","Projects","Skills","Main","exact","path","component","App","style","height","position","fixedHeader","title","color","to","src","profile","alt","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,qC,8LCE5B,SAASC,IACpB,OACI,4CCFO,SAASC,IACpB,OACI,0CCFO,SAASC,IACpB,OACI,wCCFO,SAASC,IACpB,OACI,yCCFO,SAASC,IACpB,OACI,uCCKO,SAASC,IACpB,OACI,kBAAC,IAAD,KACQ,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWR,IACjC,kBAAC,IAAD,CAAOO,KAAK,WAAWC,UAAWN,IAClC,kBAAC,IAAD,CAAOK,KAAK,WAAWC,UAAWP,IAClC,kBAAC,IAAD,CAAOM,KAAK,YAAYC,UAAWL,IACnC,kBAAC,IAAD,CAAOI,KAAK,UAAUC,UAAWJ,K,qBCoBlCK,MA1Bf,WACE,OACE,yBAAKC,MAAO,CAACC,OAAQ,QAASC,SAAU,aACxC,kBAAC,SAAD,CAAQC,aAAW,GACf,kBAAC,SAAD,CAAQC,MAAO,8BAAM,0BAAMJ,MAAO,CAAEK,MAAO,SAAtB,KAAwC,oDAA9C,MACX,kBAAC,aAAD,KACI,kBAAC,IAAD,CAAMC,GAAG,YAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,aAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,mBAIJ,6BACI,yBAAKC,IAAMC,IAASC,IAAK,SAASC,UAAY,iBAGtD,kBAAC,UAAD,KACG,kBAACf,EAAD,UChBSgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCTNC,IAASC,OACL,kBAAC,IAAD,KACI,kBAAC,EAAD,OACcC,SAASC,eAAe,SDqHxC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.2496e4f6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.7834a0cd.jpg\";","import React from 'react'\r\n\r\nexport default function LandingPage() {\r\n    return (\r\n        <div>\r\n            LandingPage\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function ContactMe() {\r\n    return (\r\n        <div>\r\n            ContactMe\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function AboutMe() {\r\n    return (\r\n        <div>\r\n            AboutMe\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Projects() {\r\n    return (\r\n        <div>\r\n            Projects\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Skills() {\r\n    return (\r\n        <div>\r\n            Skills\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport LandingPage from './LandingPage';\r\nimport ContactMe from './ContactMe';\r\nimport AboutMe from './AboutMe';\r\nimport Projects from './Projects'\r\nimport Skills from './Skills'\r\n\r\nexport default function Main() {\r\n    return (\r\n        <Switch>\r\n                <Route exact path=\"/\" component={LandingPage} />\r\n                <Route path=\"/aboutme\" component={AboutMe} />\r\n                <Route path=\"/contact\" component={ContactMe} />\r\n                <Route path=\"/projects\" component={Projects} />\r\n                <Route path=\"/skills\" component={Skills} />  \r\n        </Switch>\r\n    )\r\n}\r\n","import React from 'react';\n\nimport './App.css';\nimport { Layout, Header, Navigation, Drawer, Content } from 'react-mdl';\nimport { Link } from 'react-router-dom';\n\nimport Main from './components/Main'\nimport profile from './image/profile.jpg'\n\n\nfunction App() {\n  return (\n    <div style={{height: '300px', position: 'relative'}}>\n    <Layout fixedHeader>\n        <Header title={<span><span style={{ color: '#ddd' }}> </span><strong> Pavan Kumar K S</strong> </span>}>\n            <Navigation>\n                <Link to=\"/aboutme\">About Me</Link>\n                <Link to=\"/projects\">Projects</Link>\n                <Link to=\"/skills\">Skills</Link>\n                <Link to=\"/contact\">Contact Pavan</Link>\n            </Navigation>\n            \n        </Header>\n            <div>\n                <img src= {profile} alt ='avatar' className = \"profile_pic\" />\n            </div>\n\n        <Content > \n           <Main/>\n        </Content>\n    </Layout>\n</div>\n  \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}