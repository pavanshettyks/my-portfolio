{"version":3,"sources":["image/profile.jpg","components/LandingPage.js","components/ContactMe.js","components/AboutMe.js","components/Projects.js","components/Skills.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LandingPage","ContactMe","AboutMe","Projects","Skills","Main","exact","path","component","App","style","height","position","fixedHeader","title","color","to","src","profile","alt","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,qC,8LCE5B,SAASC,IACpB,OACI,4CCFO,SAASC,IACpB,OACI,0CCFO,SAASC,IACpB,OACI,wCCFO,SAASC,IACpB,OACI,yCCFO,SAASC,IACpB,OACI,uCCKO,SAASC,IACpB,OACI,kBAAC,IAAD,KACQ,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWR,IACjC,kBAAC,IAAD,CAAOO,KAAK,WAAWC,UAAWN,IAClC,kBAAC,IAAD,CAAOK,KAAK,WAAWC,UAAWP,IAClC,kBAAC,IAAD,CAAOM,KAAK,YAAYC,UAAWL,IACnC,kBAAC,IAAD,CAAOI,KAAK,UAAUC,UAAWJ,K,qBCoBlCK,MA1Bf,WACE,OACE,yBAAKC,MAAO,CAACC,OAAQ,QAASC,SAAU,aACxC,kBAAC,SAAD,CAAQC,aAAW,GACf,kBAAC,SAAD,CAAQC,MAAO,8BAAM,0BAAMJ,MAAO,CAAEK,MAAO,SAAtB,KAAwC,oDAA9C,MACX,kBAAC,aAAD,KACI,kBAAC,IAAD,CAAMC,GAAG,YAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,aAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,mBAIJ,6BACI,yBAAKC,IAAMC,IAASC,IAAK,SAASC,UAAY,iBAGtD,kBAAC,UAAD,KACG,kBAACf,EAAD,UChBSgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCTNC,IAASC,OACL,kBAAC,IAAD,KACI,kBAAC,EAAD,OACcC,SAASC,eAAe,SDqHxC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.ed128872.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.7834a0cd.jpg\";","import React from 'react'\r\n\r\nexport default function LandingPage() {\r\n    return (\r\n        <div>\r\n            LandingPage\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function ContactMe() {\r\n    return (\r\n        <div>\r\n            ContactMe\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function AboutMe() {\r\n    return (\r\n        <div>\r\n            AboutMe\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Projects() {\r\n    return (\r\n        <div>\r\n            Projects\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Skills() {\r\n    return (\r\n        <div>\r\n            Skills\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport LandingPage from './LandingPage';\r\nimport ContactMe from './ContactMe';\r\nimport AboutMe from './AboutMe';\r\nimport Projects from './Projects'\r\nimport Skills from './Skills'\r\n\r\nexport default function Main() {\r\n    return (\r\n        <Switch>\r\n                <Route exact path=\"/\" component={LandingPage} />\r\n                <Route path=\"/aboutme\" component={AboutMe} />\r\n                <Route path=\"/contact\" component={ContactMe} />\r\n                <Route path=\"/projects\" component={Projects} />\r\n                <Route path=\"/skills\" component={Skills} />  \r\n        </Switch>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nimport './App.css';\r\nimport { Layout, Header, Navigation, Drawer, Content } from 'react-mdl';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Main from './components/Main'\r\nimport profile from './image/profile.jpg'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div style={{height: '300px', position: 'relative'}}>\r\n    <Layout fixedHeader>\r\n        <Header title={<span><span style={{ color: '#ddd' }}> </span><strong> Pavan Kumar K S</strong> </span>}>\r\n            <Navigation>\r\n                <Link to=\"/aboutme\">About Me</Link>\r\n                <Link to=\"/projects\">Projects</Link>\r\n                <Link to=\"/skills\">Skills</Link>\r\n                <Link to=\"/contact\">Contact Pavan</Link>\r\n            </Navigation>\r\n            \r\n        </Header>\r\n            <div>\r\n                <img src= {profile} alt ='avatar' className = \"profile_pic\" />\r\n            </div>\r\n\r\n        <Content > \r\n           <Main/>\r\n        </Content>\r\n    </Layout>\r\n</div>\r\n  \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'react-mdl/extra/material.css';\r\nimport 'react-mdl/extra/material.js';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}